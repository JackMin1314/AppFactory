// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"AppFactory/internal/biz"
	"AppFactory/internal/data"
	"AppFactory/internal/server"
	"AppFactory/internal/service"
	"AppFactory/pkg/config"
	"AppFactory/pkg/log"
	"github.com/go-kratos/kratos/v2"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(configYaml *config.ConfigYaml, zapLog *log.ZapLog) (*kratos.App, error) {
	httpServer := server.NewHTTPServer(configYaml)
	grpcServer := server.NewGRPCServer(configYaml)
	dataData, err := data.NewData(configYaml, zapLog)
	if err != nil {
		return nil, err
	}
	appExcelRepo := data.NewAppExcelImplRepo(dataData, zapLog)
	appExcelUsecase := biz.NewAppExcelUsecase(appExcelRepo, zapLog)
	appExcelService := service.NewAppExcelService(zapLog, appExcelUsecase)
	app := newApp(zapLog, httpServer, grpcServer, appExcelService)
	return app, nil
}
